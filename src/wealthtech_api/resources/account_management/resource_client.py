"""File Generated by Sideko (sideko.dev)"""

from wealthtech_api.core import SyncBaseClient, AsyncBaseClient
from wealthtech_api.resources.account_management.accounts import (
    AsyncAccountsClient,
    AccountsClient,
)
from wealthtech_api.resources.account_management.related_persons import (
    RelatedPersonsClient,
    AsyncRelatedPersonsClient,
)
from wealthtech_api.resources.account_management.tda_to_swb_migrations import (
    TdaToSwbMigrationsClient,
    AsyncTdaToSwbMigrationsClient,
)
from wealthtech_api.resources.account_management.tax_id import (
    AsyncTaxIdClient,
    TaxIdClient,
)


class AccountManagementClient:
    def __init__(self, *, base_client: SyncBaseClient):
        self._base_client = base_client
        # register sync resources (keep comment for code generation)
        self.accounts = AccountsClient(base_client=self._base_client)
        self.related_persons = RelatedPersonsClient(base_client=self._base_client)
        self.tda_to_swb_migrations = TdaToSwbMigrationsClient(
            base_client=self._base_client
        )
        self.tax_id = TaxIdClient(base_client=self._base_client)

    # register sync api methods (keep comment for code generation)


class AsyncAccountManagementClient:
    def __init__(self, *, base_client: AsyncBaseClient):
        self._base_client = base_client
        # register async resources (keep comment for code generation)
        self.accounts = AsyncAccountsClient(base_client=self._base_client)
        self.related_persons = AsyncRelatedPersonsClient(base_client=self._base_client)
        self.tda_to_swb_migrations = AsyncTdaToSwbMigrationsClient(
            base_client=self._base_client
        )
        self.tax_id = AsyncTaxIdClient(base_client=self._base_client)

    # register async api methods (keep comment for code generation)
