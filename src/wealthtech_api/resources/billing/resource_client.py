"""File Generated by Sideko (sideko.dev)"""

from wealthtech_api.core import AsyncBaseClient, SyncBaseClient
from wealthtech_api.resources.billing.asset_adjustments import (
    AsyncAssetAdjustmentsClient,
    AssetAdjustmentsClient,
)
from wealthtech_api.resources.billing.fee_structures import (
    FeeStructuresClient,
    AsyncFeeStructuresClient,
)
from wealthtech_api.resources.billing.groups import AsyncGroupsClient, GroupsClient
from wealthtech_api.resources.billing.minimums import (
    MinimumsClient,
    AsyncMinimumsClient,
)
from wealthtech_api.resources.billing.reports import AsyncReportsClient, ReportsClient
from wealthtech_api.resources.billing.splits import SplitsClient, AsyncSplitsClient
from wealthtech_api.resources.billing.fee_upload_files import (
    FeeUploadFilesClient,
    AsyncFeeUploadFilesClient,
)
from wealthtech_api.resources.billing.invoices import (
    InvoicesClient,
    AsyncInvoicesClient,
)


class BillingClient:
    def __init__(self, *, base_client: SyncBaseClient):
        self._base_client = base_client
        # register sync resources (keep comment for code generation)
        self.asset_adjustments = AssetAdjustmentsClient(base_client=self._base_client)
        self.fee_structures = FeeStructuresClient(base_client=self._base_client)
        self.groups = GroupsClient(base_client=self._base_client)
        self.minimums = MinimumsClient(base_client=self._base_client)
        self.reports = ReportsClient(base_client=self._base_client)
        self.splits = SplitsClient(base_client=self._base_client)
        self.fee_upload_files = FeeUploadFilesClient(base_client=self._base_client)
        self.invoices = InvoicesClient(base_client=self._base_client)

    # register sync api methods (keep comment for code generation)


class AsyncBillingClient:
    def __init__(self, *, base_client: AsyncBaseClient):
        self._base_client = base_client
        # register async resources (keep comment for code generation)
        self.asset_adjustments = AsyncAssetAdjustmentsClient(
            base_client=self._base_client
        )
        self.fee_structures = AsyncFeeStructuresClient(base_client=self._base_client)
        self.groups = AsyncGroupsClient(base_client=self._base_client)
        self.minimums = AsyncMinimumsClient(base_client=self._base_client)
        self.reports = AsyncReportsClient(base_client=self._base_client)
        self.splits = AsyncSplitsClient(base_client=self._base_client)
        self.fee_upload_files = AsyncFeeUploadFilesClient(base_client=self._base_client)
        self.invoices = AsyncInvoicesClient(base_client=self._base_client)

    # register async api methods (keep comment for code generation)
