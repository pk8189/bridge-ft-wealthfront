"""File Generated by Sideko (sideko.dev)"""

from wealthtech_api.core import (
    SyncBaseClient,
    AsyncBaseClient,
    RequestOptions,
    to_encodable,
    default_request_options,
)
from wealthtech_api.types.analytics.aum.by_household import params, models
import typing


class ByHouseholdClient:
    def __init__(self, *, base_client: SyncBaseClient):
        self._base_client = base_client
        # register sync resources (keep comment for code generation)

    # register sync api methods (keep comment for code generation)
    def create(
        self,
        *,
        data: params.PostAnalyticsAumByHouseholdBody,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> models.PostAnalyticsAumByHouseholdResponse:
        """
        Returns AUM records for requested Household(s) on a selected date. Provide a list of `household_ids` and receive the assets under management value for each household.
        """
        # start -- build request data (keep comment for code generation)
        _json = to_encodable(
            item=data, dump_with=params._SerializerPostAnalyticsAumByHouseholdBody
        )
        # end -- build request data (keep comment for code generation)

        # start -- send sync request (keep comment for code generation)
        return self._base_client.request(
            method="POST",
            path="/analytics/aum/by-household",
            auth_names=["bearerAuth"],
            json=_json,
            cast_to=models.PostAnalyticsAumByHouseholdResponse,
            request_options=request_options or default_request_options(),
        )
        # end -- send sync request (keep comment for code generation)


class AsyncByHouseholdClient:
    def __init__(self, *, base_client: AsyncBaseClient):
        self._base_client = base_client
        # register async resources (keep comment for code generation)

    # register async api methods (keep comment for code generation)
    async def create(
        self,
        *,
        data: params.PostAnalyticsAumByHouseholdBody,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> models.PostAnalyticsAumByHouseholdResponse:
        """
        Returns AUM records for requested Household(s) on a selected date. Provide a list of `household_ids` and receive the assets under management value for each household.
        """
        # start -- build request data (keep comment for code generation)
        _json = to_encodable(
            item=data, dump_with=params._SerializerPostAnalyticsAumByHouseholdBody
        )
        # end -- build request data (keep comment for code generation)

        # start -- send async request (keep comment for code generation)
        return await self._base_client.request(
            method="POST",
            path="/analytics/aum/by-household",
            auth_names=["bearerAuth"],
            json=_json,
            cast_to=models.PostAnalyticsAumByHouseholdResponse,
            request_options=request_options or default_request_options(),
        )
        # end -- send async request (keep comment for code generation)
