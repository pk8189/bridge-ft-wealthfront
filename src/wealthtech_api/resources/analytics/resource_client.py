"""File Generated by Sideko (sideko.dev)"""

from wealthtech_api.core import SyncBaseClient, AsyncBaseClient
from wealthtech_api.resources.analytics.aum import AsyncAumClient, AumClient
from wealthtech_api.resources.analytics.account_performance import (
    AccountPerformanceClient,
    AsyncAccountPerformanceClient,
)
from wealthtech_api.resources.analytics.benchmark_performance import (
    BenchmarkPerformanceClient,
    AsyncBenchmarkPerformanceClient,
)
from wealthtech_api.resources.analytics.household_performance import (
    AsyncHouseholdPerformanceClient,
    HouseholdPerformanceClient,
)


class AnalyticsClient:
    def __init__(self, *, base_client: SyncBaseClient):
        self._base_client = base_client
        # register sync resources (keep comment for code generation)
        self.aum = AumClient(base_client=self._base_client)
        self.account_performance = AccountPerformanceClient(
            base_client=self._base_client
        )
        self.benchmark_performance = BenchmarkPerformanceClient(
            base_client=self._base_client
        )
        self.household_performance = HouseholdPerformanceClient(
            base_client=self._base_client
        )

    # register sync api methods (keep comment for code generation)


class AsyncAnalyticsClient:
    def __init__(self, *, base_client: AsyncBaseClient):
        self._base_client = base_client
        # register async resources (keep comment for code generation)
        self.aum = AsyncAumClient(base_client=self._base_client)
        self.account_performance = AsyncAccountPerformanceClient(
            base_client=self._base_client
        )
        self.benchmark_performance = AsyncBenchmarkPerformanceClient(
            base_client=self._base_client
        )
        self.household_performance = AsyncHouseholdPerformanceClient(
            base_client=self._base_client
        )

    # register async api methods (keep comment for code generation)
