"""File Generated by Sideko (sideko.dev)"""

from wealthtech_api.core import (
    RequestOptions,
    to_encodable,
    default_request_options,
    SyncBaseClient,
    AsyncBaseClient,
)
from wealthtech_api.types.org.advisor_codes.delete_many import models, params
import typing


class DeleteManyClient:
    def __init__(self, *, base_client: SyncBaseClient):
        self._base_client = base_client
        # register sync resources (keep comment for code generation)

    # register sync api methods (keep comment for code generation)
    def create(
        self,
        *,
        data: params.PostOrgAdvisorCodesDeleteManyBody,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> models.PostOrgAdvisorCodesDeleteManyResponse:
        """
        Gives the ability to remove multiple advisor codes from your application by providing IDs. The `id`'s provided can be found from resources returned from the `GET /v2/org/advisor-codes` endpoint.

        **Note for Advisor Code Mapping in Sandbox Applications**
        To preserve the data integrity of sandbox applications, the advisor code mapping endpoints are read-only
        and requests for creation or deletion of advisor codes will not result in updates to advisor code mappings.
        Sandbox applications can read advisor codes from the `/v2/org/advisor-codes` endpoint, but the changes will not
        be reflected upon updates.

        For production applications, full access is granted to the advisor code mapping endpoints. Creations and removals
        of advisor codes will be applied to the advisor codes mapped to the application.

        """
        # start -- build request data (keep comment for code generation)
        _json = to_encodable(
            item=data, dump_with=params._SerializerPostOrgAdvisorCodesDeleteManyBody
        )
        # end -- build request data (keep comment for code generation)

        # start -- send sync request (keep comment for code generation)
        return self._base_client.request(
            method="POST",
            path="/org/advisor-codes/delete-many",
            auth_names=["bearerAuth"],
            json=_json,
            cast_to=models.PostOrgAdvisorCodesDeleteManyResponse,
            request_options=request_options or default_request_options(),
        )
        # end -- send sync request (keep comment for code generation)


class AsyncDeleteManyClient:
    def __init__(self, *, base_client: AsyncBaseClient):
        self._base_client = base_client
        # register async resources (keep comment for code generation)

    # register async api methods (keep comment for code generation)
    async def create(
        self,
        *,
        data: params.PostOrgAdvisorCodesDeleteManyBody,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> models.PostOrgAdvisorCodesDeleteManyResponse:
        """
        Gives the ability to remove multiple advisor codes from your application by providing IDs. The `id`'s provided can be found from resources returned from the `GET /v2/org/advisor-codes` endpoint.

        **Note for Advisor Code Mapping in Sandbox Applications**
        To preserve the data integrity of sandbox applications, the advisor code mapping endpoints are read-only
        and requests for creation or deletion of advisor codes will not result in updates to advisor code mappings.
        Sandbox applications can read advisor codes from the `/v2/org/advisor-codes` endpoint, but the changes will not
        be reflected upon updates.

        For production applications, full access is granted to the advisor code mapping endpoints. Creations and removals
        of advisor codes will be applied to the advisor codes mapped to the application.

        """
        # start -- build request data (keep comment for code generation)
        _json = to_encodable(
            item=data, dump_with=params._SerializerPostOrgAdvisorCodesDeleteManyBody
        )
        # end -- build request data (keep comment for code generation)

        # start -- send async request (keep comment for code generation)
        return await self._base_client.request(
            method="POST",
            path="/org/advisor-codes/delete-many",
            auth_names=["bearerAuth"],
            json=_json,
            cast_to=models.PostOrgAdvisorCodesDeleteManyResponse,
            request_options=request_options or default_request_options(),
        )
        # end -- send async request (keep comment for code generation)
