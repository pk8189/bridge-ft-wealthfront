"""File Generated by Sideko (sideko.dev)"""

import io
import typing

import typing_extensions
import pydantic

ModelFiles = typing.List[
    typing.Tuple[str, typing.Union[typing.BinaryIO, io.BufferedReader]]
]


class PostDataCustodianSecuritiesReferenceResponseItemMarketData(pydantic.BaseModel):
    model_config = pydantic.ConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    composite_figi: typing.Optional[str] = pydantic.Field(
        alias="composite_figi", default=None
    )
    description: typing.Optional[str] = pydantic.Field(
        alias="description", default=None
    )
    figi: typing.Optional[str] = pydantic.Field(alias="figi", default=None)
    security_code: typing.Optional[str] = pydantic.Field(
        alias="security_code", default=None
    )
    security_code_description: typing.Optional[str] = pydantic.Field(
        alias="security_code_description", default=None
    )
    security_type: typing.Optional[str] = pydantic.Field(
        alias="security_type", default=None
    )
    symbol_field: typing.Optional[str] = pydantic.Field(alias="symbol", default=None)


class PostDataCustodianSecuritiesReferenceResponseItem(pydantic.BaseModel):
    model_config = pydantic.ConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    cusip: typing.Optional[str] = pydantic.Field(alias="cusip", default=None)
    description: typing.Optional[str] = pydantic.Field(
        alias="description", default=None
    )
    market_data: typing.Optional[
        PostDataCustodianSecuritiesReferenceResponseItemMarketData
    ] = pydantic.Field(alias="market_data", default=None)
    option_code: typing.Optional[str] = pydantic.Field(
        alias="option_code", default=None
    )
    option_expiration_date: typing.Optional[str] = pydantic.Field(
        alias="option_expiration_date", default=None
    )
    option_root_symbol: typing.Optional[str] = pydantic.Field(
        alias="option_root_symbol", default=None
    )
    reported_date: typing.Optional[str] = pydantic.Field(
        alias="reported_date", default=None
    )
    security_type: typing.Optional[str] = pydantic.Field(
        alias="security_type", default=None
    )
    security_type_description: typing.Optional[str] = pydantic.Field(
        alias="security_type_description", default=None
    )
    source: typing.Optional[
        typing_extensions.Literal[
            "EGB", "APX", "PER", "MLT", "NFS", "DST", "IBK", "FPR", "TIA", "SWB"
        ]
    ] = pydantic.Field(alias="source", default=None)
    strike_price_amount: typing.Optional[float] = pydantic.Field(
        alias="strike_price_amount", default=None
    )
    symbol_field: typing.Optional[str] = pydantic.Field(alias="symbol", default=None)
