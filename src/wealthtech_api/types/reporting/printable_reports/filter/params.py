"""File Generated by Sideko (sideko.dev)"""

from __future__ import annotations
import io
import typing
import pydantic
import typing_extensions

HttpxFile = typing.Tuple[str, typing.Union[typing.BinaryIO, io.BufferedReader]]


class PostReportingPrintableReportsFilterBody(typing_extensions.TypedDict):
    """
    No description specified
    """

    account_id: typing_extensions.NotRequired[typing.Optional[int]]
    client_accessible: typing_extensions.NotRequired[bool]
    created_by_user_id: typing_extensions.NotRequired[int]
    dt_utc: typing_extensions.NotRequired[str]
    end_date: typing_extensions.NotRequired[str]
    error_message: typing_extensions.NotRequired[typing.Optional[str]]
    firm_id: typing_extensions.NotRequired[int]
    frequency: typing_extensions.NotRequired[typing.Optional[str]]
    household_id: typing_extensions.NotRequired[int]
    id: typing_extensions.NotRequired[int]
    report_date: typing_extensions.NotRequired[str]
    size_bytes: typing_extensions.NotRequired[int]
    start_date: typing_extensions.NotRequired[str]
    state: typing_extensions.NotRequired[str]
    timestamp_utc: typing_extensions.NotRequired[int]


class _SerializerPostReportingPrintableReportsFilterBody(pydantic.BaseModel):
    """
    Serializer for PostReportingPrintableReportsFilterBody handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    account_id: typing.Optional[int] = pydantic.Field(alias="account_id", default=None)
    client_accessible: typing.Optional[bool] = pydantic.Field(
        alias="client_accessible", default=None
    )
    created_by_user_id: typing.Optional[int] = pydantic.Field(
        alias="created_by_user_id", default=None
    )
    dt_utc: typing.Optional[str] = pydantic.Field(alias="dt_utc", default=None)
    end_date: typing.Optional[str] = pydantic.Field(alias="end_date", default=None)
    error_message: typing.Optional[str] = pydantic.Field(
        alias="error_message", default=None
    )
    firm_id: typing.Optional[int] = pydantic.Field(alias="firm_id", default=None)
    frequency: typing.Optional[str] = pydantic.Field(alias="frequency", default=None)
    household_id: typing.Optional[int] = pydantic.Field(
        alias="household_id", default=None
    )
    id: typing.Optional[int] = pydantic.Field(alias="id", default=None)
    report_date: typing.Optional[str] = pydantic.Field(
        alias="report_date", default=None
    )
    size_bytes: typing.Optional[int] = pydantic.Field(alias="size_bytes", default=None)
    start_date: typing.Optional[str] = pydantic.Field(alias="start_date", default=None)
    state: typing.Optional[str] = pydantic.Field(alias="state", default=None)
    timestamp_utc: typing.Optional[int] = pydantic.Field(
        alias="timestamp_utc", default=None
    )
