"""File Generated by Sideko (sideko.dev)"""

from __future__ import annotations
import io
import typing
import pydantic
import typing_extensions

HttpxFile = typing.Tuple[str, typing.Union[typing.BinaryIO, io.BufferedReader]]


class PostReportingPrintableReportsDownloadBody(typing_extensions.TypedDict):
    """
    No description specified
    """

    ids: typing_extensions.NotRequired[typing.List[int]]


class _SerializerPostReportingPrintableReportsDownloadBody(pydantic.BaseModel):
    """
    Serializer for PostReportingPrintableReportsDownloadBody handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    ids: typing.Optional[typing.List[int]] = pydantic.Field(alias="ids", default=None)


class PostReportingPrintableReportsDownloadIdBody(typing_extensions.TypedDict):
    """
    No description specified
    """

    accept: typing_extensions.NotRequired[str]
    content_type: typing_extensions.NotRequired[str]


class _SerializerPostReportingPrintableReportsDownloadIdBody(pydantic.BaseModel):
    """
    Serializer for PostReportingPrintableReportsDownloadIdBody handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    accept: typing.Optional[str] = pydantic.Field(alias="Accept", default=None)
    content_type: typing.Optional[str] = pydantic.Field(
        alias="Content-Type", default=None
    )
