"""File Generated by Sideko (sideko.dev)"""

from __future__ import annotations
import io
import typing
import pydantic
import typing_extensions

HttpxFile = typing.Tuple[str, typing.Union[typing.BinaryIO, io.BufferedReader]]


class PostReportingWebReportsBody(typing_extensions.TypedDict):
    """
    No description specified
    """

    account_id: typing_extensions.NotRequired[typing.Optional[int]]
    end: typing_extensions.Required[str]
    firm_id: typing.Optional[int]
    household_id: typing_extensions.NotRequired[typing.Optional[int]]
    irr_performance: typing_extensions.NotRequired[typing.Optional[bool]]
    start: typing_extensions.Required[str]
    sub_reports: typing_extensions.Required[typing.List[str]]


class _SerializerPostReportingWebReportsBody(pydantic.BaseModel):
    """
    Serializer for PostReportingWebReportsBody handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    account_id: typing.Optional[int] = pydantic.Field(alias="account_id", default=None)
    end: str = pydantic.Field(alias="end")
    firm_id: typing.Optional[int] = pydantic.Field(alias="firm_id")
    household_id: typing.Optional[int] = pydantic.Field(
        alias="household_id", default=None
    )
    irr_performance: typing.Optional[bool] = pydantic.Field(
        alias="irr_performance", default=None
    )
    start: str = pydantic.Field(alias="start")
    sub_reports: typing.List[str] = pydantic.Field(alias="sub_reports")
