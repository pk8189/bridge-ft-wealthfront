"""File Generated by Sideko (sideko.dev)"""

from __future__ import annotations
import io
import typing
import pydantic
import typing_extensions

HttpxFile = typing.Tuple[str, typing.Union[typing.BinaryIO, io.BufferedReader]]


class PostAccountManagementTdaToSwbMigrationsFilterBody(typing_extensions.TypedDict):
    """
    No description specified
    """

    account_id: typing_extensions.NotRequired[int]
    account_ids: typing_extensions.NotRequired[typing.List[int]]
    schwab_account_number: typing_extensions.NotRequired[str]
    schwab_account_numbers: typing_extensions.NotRequired[typing.List[str]]
    schwab_master_number: typing_extensions.NotRequired[str]
    schwab_master_numbers: typing_extensions.NotRequired[typing.List[str]]
    tda_account_number: typing_extensions.NotRequired[str]
    tda_account_numbers: typing_extensions.NotRequired[typing.List[str]]
    tda_rep_code: typing_extensions.NotRequired[str]
    tda_rep_codes: typing_extensions.NotRequired[typing.List[str]]


class _SerializerPostAccountManagementTdaToSwbMigrationsFilterBody(pydantic.BaseModel):
    """
    Serializer for PostAccountManagementTdaToSwbMigrationsFilterBody handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    account_id: typing.Optional[int] = pydantic.Field(alias="account_id", default=None)
    account_ids: typing.Optional[typing.List[int]] = pydantic.Field(
        alias="account_ids", default=None
    )
    schwab_account_number: typing.Optional[str] = pydantic.Field(
        alias="schwab_account_number", default=None
    )
    schwab_account_numbers: typing.Optional[typing.List[str]] = pydantic.Field(
        alias="schwab_account_numbers", default=None
    )
    schwab_master_number: typing.Optional[str] = pydantic.Field(
        alias="schwab_master_number", default=None
    )
    schwab_master_numbers: typing.Optional[typing.List[str]] = pydantic.Field(
        alias="schwab_master_numbers", default=None
    )
    tda_account_number: typing.Optional[str] = pydantic.Field(
        alias="tda_account_number", default=None
    )
    tda_account_numbers: typing.Optional[typing.List[str]] = pydantic.Field(
        alias="tda_account_numbers", default=None
    )
    tda_rep_code: typing.Optional[str] = pydantic.Field(
        alias="tda_rep_code", default=None
    )
    tda_rep_codes: typing.Optional[typing.List[str]] = pydantic.Field(
        alias="tda_rep_codes", default=None
    )
