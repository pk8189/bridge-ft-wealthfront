"""File Generated by Sideko (sideko.dev)"""

from __future__ import annotations
import io
import typing
import pydantic
import typing_extensions

HttpxFile = typing.Tuple[str, typing.Union[typing.BinaryIO, io.BufferedReader]]


class PostOrgAdvisorCodesCreateManyBodyItem(typing_extensions.TypedDict):
    """
    No description specified
    """

    code_field: typing_extensions.Required[str]
    firm_id: typing_extensions.Required[int]
    source: typing_extensions.Required[
        typing_extensions.Literal[
            "NFS", "SWB", "DST", "IBK", "MLT", "EGB", "TIA", "APX", "FPR", "PER"
        ]
    ]


class _SerializerPostOrgAdvisorCodesCreateManyBodyItem(pydantic.BaseModel):
    """
    Serializer for PostOrgAdvisorCodesCreateManyBodyItem handling case conversions
    and file omitions as dictated by the API
    """

    model_config = pydantic.ConfigDict(
        populate_by_name=True,
    )

    code_field: str = pydantic.Field(alias="code")
    firm_id: int = pydantic.Field(alias="firm_id")
    source: typing_extensions.Literal[
        "FPR", "NFS", "MLT", "SWB", "DST", "APX", "IBK", "PER", "EGB", "TIA"
    ] = pydantic.Field(alias="source")
