"""File Generated by Sideko (sideko.dev)"""

import pytest
from wealthtech_api import Client, AsyncClient
from wealthtech_api.types.account_management.tda_to_swb_migrations.filter import models
from pydantic import TypeAdapter

# test sync & async methods (keep comment for code generation)


def test_create_200_generated_success_default():
    """Test description"""
    # tests calling sync method with example data (keep comment for code generation)
    client = Client(
        username="API_USERNAME",
        password="API_PASSWORD",
        token="API_TOKEN",
        base_url="https://api.sideko.dev/v1/api_project/a9773eee-d42b-469d-a46d-faaf05e641b0/version/43ecbc55-8afa-476e-ab94-df5433a98189/mock",
    )
    response = client.account_management.tda_to_swb_migrations.filter.create(
        pager_limit=123,
        pager_page=123,
        data={
            "account_id": 216897,
            "account_ids": [216897, 216898],
            "schwab_account_number": "SWBACCOUNT1",
            "schwab_account_numbers": ["SWBACCOUNT1", "SWBACCOUNT2"],
            "schwab_master_number": "SWBMASTERNUMBER1",
            "schwab_master_numbers": ["SWBMASTERNUMBER1", "SWBMASTERNUMBER2"],
            "tda_account_number": "TDAACCOUNT1",
            "tda_account_numbers": ["TDAACCOUNT1", "TDAACCOUNT2"],
            "tda_rep_code": "TDAREPCODE1",
            "tda_rep_codes": ["TDAREPCODE1", "TDAREPCODE2"],
        },
    )
    adapter = TypeAdapter(models.PostAccountManagementTdaToSwbMigrationsFilterResponse)
    adapter.validate_python(response)


@pytest.mark.asyncio
async def test_await_create_200_generated_success_default():
    """Test description"""
    # tests calling async method with example data (keep comment for code generation)
    client = AsyncClient(
        username="API_USERNAME",
        password="API_PASSWORD",
        token="API_TOKEN",
        base_url="https://api.sideko.dev/v1/api_project/a9773eee-d42b-469d-a46d-faaf05e641b0/version/43ecbc55-8afa-476e-ab94-df5433a98189/mock",
    )
    response = await client.account_management.tda_to_swb_migrations.filter.create(
        pager_limit=123,
        pager_page=123,
        data={
            "account_id": 216897,
            "account_ids": [216897, 216898],
            "schwab_account_number": "SWBACCOUNT1",
            "schwab_account_numbers": ["SWBACCOUNT1", "SWBACCOUNT2"],
            "schwab_master_number": "SWBMASTERNUMBER1",
            "schwab_master_numbers": ["SWBMASTERNUMBER1", "SWBMASTERNUMBER2"],
            "tda_account_number": "TDAACCOUNT1",
            "tda_account_numbers": ["TDAACCOUNT1", "TDAACCOUNT2"],
            "tda_rep_code": "TDAREPCODE1",
            "tda_rep_codes": ["TDAREPCODE1", "TDAREPCODE2"],
        },
    )
    adapter = TypeAdapter(models.PostAccountManagementTdaToSwbMigrationsFilterResponse)
    adapter.validate_python(response)
