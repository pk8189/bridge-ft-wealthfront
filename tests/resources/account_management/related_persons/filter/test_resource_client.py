"""File Generated by Sideko (sideko.dev)"""

import pytest
from wealthtech_api import AsyncClient, Client
from wealthtech_api.types.account_management.related_persons.filter import models
from pydantic import TypeAdapter

# test sync & async methods (keep comment for code generation)


def test_create_200_generated_success_default():
    """Test description"""
    # tests calling sync method with example data (keep comment for code generation)
    client = Client(
        username="API_USERNAME",
        password="API_PASSWORD",
        token="API_TOKEN",
        base_url="https://api.sideko.dev/v1/api_project/a9773eee-d42b-469d-a46d-faaf05e641b0/version/43ecbc55-8afa-476e-ab94-df5433a98189/mock",
    )
    response = client.account_management.related_persons.filter.create(
        pager_limit=123,
        pager_page=123,
        data={
            "account_id": 12341234,
            "account_ids": [12345, 12346],
            "date_of_birth": "1995-09-23",
            "email_field": "john.doe@example.com",
            "entity_name": "John Doe's Company",
            "first_name": "John",
            "id": 1234,
            "last_name": "Doe",
            "middle_initial": "H",
            "tax_id_token": "tax_id_token",
            "type": "Beneficiary",
        },
    )
    adapter = TypeAdapter(models.PostAccountManagementRelatedPersonsFilterResponse)
    adapter.validate_python(response)


@pytest.mark.asyncio
async def test_await_create_200_generated_success_default():
    """Test description"""
    # tests calling async method with example data (keep comment for code generation)
    client = AsyncClient(
        username="API_USERNAME",
        password="API_PASSWORD",
        token="API_TOKEN",
        base_url="https://api.sideko.dev/v1/api_project/a9773eee-d42b-469d-a46d-faaf05e641b0/version/43ecbc55-8afa-476e-ab94-df5433a98189/mock",
    )
    response = await client.account_management.related_persons.filter.create(
        pager_limit=123,
        pager_page=123,
        data={
            "account_id": 12341234,
            "account_ids": [12345, 12346],
            "date_of_birth": "1995-09-23",
            "email_field": "john.doe@example.com",
            "entity_name": "John Doe's Company",
            "first_name": "John",
            "id": 1234,
            "last_name": "Doe",
            "middle_initial": "H",
            "tax_id_token": "tax_id_token",
            "type": "Beneficiary",
        },
    )
    adapter = TypeAdapter(models.PostAccountManagementRelatedPersonsFilterResponse)
    adapter.validate_python(response)
